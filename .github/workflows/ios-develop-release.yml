name: iOS Develop Release

on:
  push: 
    branches: 
      - develop

  pull_request: 
    branches: 
      - develop

jobs: 
  version:
    name: "Generate Version Number"
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v2
      - 
        name: "Fetch all history for all tags and branches"
        run: git fetch --unshallow
      - 
        name: "Install GitVersion"
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
            versionSpec: '5.x'
      - 
        name: "Use GitVersion"
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.6
      - 
        name: "Create version.txt"
        run: echo "${{ steps.gitversion.outputs.MajorMinorPatch }}+${{ github.run_id }}" > apps/mobile_flutter/version.txt
      - 
        name: "Upload version.txt"
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: apps/mobile_flutter/version.txt

  buildIos:
    name: "Build iOS"
    needs: [ version ]
    runs-on: macos-latest
    steps:
      - 
        uses: actions/checkout@v2
      - 
        uses: actions/setup-java@v1
        with: 
          java-version: 12.x
      - 
        uses: subosito/flutter-action@v1
        with: 
          channel: stable
          flutter-version: "1.22.5"
      - 
        env: 
          FLUTTER_WEATHER_ENV_CONFIG: "${{ secrets.FLUTTER_WEATHER_ENV_CONFIG }}"
        name: "Decode environment config"
        run: echo "$FLUTTER_WEATHER_ENV_CONFIG" > apps/mobile_flutter/lib/env_config.dart
      - 
        name: "Get version.txt"
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - 
        name: "Read version"
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - 
        name: "Flutter get"
        working-directory: "./apps/mobile_flutter"
        run: "flutter pub get"
      - 
        name: "Flutter clean"
        working-directory: "./apps/mobile_flutter"
        run: "flutter clean"
      - 
        name: "Flutter test"
        working-directory: "./apps/mobile_flutter"
        run: "flutter test"
      - 
        name: "Flutter build"
        working-directory: "./apps/mobile_flutter"
        run: "flutter build ios -t lib/main_dev.dart --no-codesign --verbose"
      - 
        name: "Compress build"
        working-directory: "./apps/mobile_flutter/build/ios/iphoneos"
        run: |
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r ios-app.ipa Payload
          ls -l ios-app.ipa
      - 
        name: "Create github artifact"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./apps/mobile_flutter/build/ios/iphoneos/ios-app.ipa"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "ios-${{ steps.version.outputs.content }}"
          commit: ${{ github.sha }}
          prerelease: true