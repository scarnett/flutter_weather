name: "Android App Store Release"

on:
  push: 
    branches: 
      - main

jobs: 
  version:
    name: "Generate Version Number"
    runs-on: ubuntu-latest
    env:
      VERSION_TXT_PATH: ${{ './apps/mobile_flutter/version.txt' }}
    steps:
      - 
        uses: actions/checkout@v2
      - 
        name: "Fetch all history for all tags and branches"
        run: git fetch --unshallow
      - 
        name: "Install GitVersion"
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
            versionSpec: '5.x'
      - 
        name: "Use GitVersion"
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - 
        name: "Create version.txt"
        run: echo "${{ steps.gitversion.outputs.MajorMinorPatch }}+${{ github.run_id }}" > "${{ env.VERSION_TXT_PATH }}"
      - 
        name: "Upload version.txt"
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: "${{ env.VERSION_TXT_PATH }}"

  build: 
    name: "Build Android"
    needs: [ version ]
    runs-on: ubuntu-latest
    env:
      FLUTTER_WEATHER_FOLDER: ${{ './apps/mobile_flutter' }}
      FLUTTER_WEATHER_LOCAL_PROPERTIES: ${{ secrets.FLUTTER_WEATHER_LOCAL_PROPERTIES }}
      FLUTTER_WEATHER_LOCAL_PROPERTIES_FILE_PATH: ${{ './apps/mobile_flutter/android/local.properties' }}
      FLUTTER_WEATHER_KEY_PROPERTIES: ${{ secrets.FLUTTER_WEATHER_KEY_PROPERTIES }}
      FLUTTER_WEATHER_KEY_PROPERTIES_FILE_PATH: ${{ './apps/mobile_flutter/android/key.properties' }}
      FLUTTER_WEATHER_GOOGLE_SERVICES_JSON: ${{ secrets.FLUTTER_WEATHER_GOOGLE_SERVICES_JSON }}
      FLUTTER_WEATHER_GOOGLE_SERVICES_JSON_FILE_PATH: ${{ './apps/mobile_flutter/android/app/google-services.json' }}
      FLUTTER_WEATHER_KEYSTORE: ${{ secrets.FLUTTER_WEATHER_KEYSTORE }}
      FLUTTER_WEATHER_KEYSTORE_PASS: ${{ secrets.FLUTTER_WEATHER_KEYSTORE_PASS }}
      FLUTTER_WEATHER_KEYSTORE_KEY_PASS: ${{ secrets.FLUTTER_WEATHER_KEYSTORE_KEY_PASS }}
      FLUTTER_WEATHER_KEYSTORE_JKS_ASC: ${{ './apps/mobile_flutter/android/app/key.jks.asc' }}
      FLUTTER_WEATHER_KEYSTORE_JKS: ${{ './apps/mobile_flutter/android/app/key.jks' }}
      FLUTTER_WEATHER_ENV_CONFIG: ${{ secrets.FLUTTER_WEATHER_ENV_CONFIG }}
      FLUTTER_WEATHER_ENV_CONFIG_FILE_PATH: ${{ './apps/mobile_flutter/lib/env_config.dart' }}
      FLUTTER_WEATHER_APPBUNDLE_OUTPUT_FOLDER: ${{ './apps/mobile_flutter/build/app/outputs/bundle/prodRelease/' }}
      FLUTTER_WEATHER_APPBUNDLE_OUTPUT_FILE: ${{ 'app-prod-release.aab' }}
      FLUTTER_WEATHER_APPBUNDLE_ZIP_OUTPUT_FILE: ${{ 'android-app.zip' }}
    steps: 
      - 
        uses: actions/checkout@v2
      - 
        uses: actions/setup-java@v1
        with: 
          java-version: 12.x
      - 
        uses: subosito/flutter-action@v1
        with: 
          channel: stable
          flutter-version: "1.22.5"
      - 
        name: "Decode android local.properties"
        run: echo "${{ env.FLUTTER_WEATHER_LOCAL_PROPERTIES }}" > "${{ env.FLUTTER_WEATHER_LOCAL_PROPERTIES_FILE_PATH }}"
      - 
        name: "Decode android key.properties"
        run: echo "${{ env.FLUTTER_WEATHER_KEY_PROPERTIES }}" > "${{ env.FLUTTER_WEATHER_KEY_PROPERTIES_FILE_PATH }}"
      - 
        name: "Decode google-services.json"
        run: echo "${{ env.FLUTTER_WEATHER_GOOGLE_SERVICES_JSON }}" > "${{ env.FLUTTER_WEATHER_GOOGLE_SERVICES_JSON_FILE_PATH }}"
      - 
        name: "Decode android keystore"
        run: |
          echo "${{ env.FLUTTER_WEATHER_KEYSTORE }}" > "${{ env.FLUTTER_WEATHER_KEYSTORE_JKS_ASC }}"
          gpg -d --passphrase "${{ env.FLUTTER_WEATHER_KEYSTORE_PASS }}" --batch "${{ env.FLUTTER_WEATHER_KEYSTORE_JKS_ASC }}" > "${{ env.FLUTTER_WEATHER_KEYSTORE_JKS }}"
      - 
        name: "Decode environment config"
        run: echo "${{ env.FLUTTER_WEATHER_ENV_CONFIG }}" > "${{ env.FLUTTER_WEATHER_ENV_CONFIG_FILE_PATH }}"
      - 
        name: "Get version.txt"
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - 
        name: "Read version"
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - 
        name: "Update app version"
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "99.99.99"
          replace: ${{ steps.version.outputs.content }}
      - 
        name: "Update KeyStore password in gradle properties"
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "storePassword\\="
          replace: "storePassword=${{ env.FLUTTER_WEATHER_KEYSTORE_PASS }}"
          include: "${{ env.FLUTTER_WEATHER_KEY_PROPERTIES_FILE_PATH }}"
      - 
        name: "Update KeyStore key password in gradle properties"
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "keyPassword\\="
          replace: "keyPassword=${{ env.FLUTTER_WEATHER_KEYSTORE_KEY_PASS }}"
          include: "${{ env.FLUTTER_WEATHER_KEY_PROPERTIES_FILE_PATH }}"
      - 
        name: "Update build mode in local properties"
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "flutter.buildMode=debug"
          replace: "flutter.buildMode=release"
      - 
        name: "Update version name in local properties"
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "flutter.versionName=1.0.0"
          replace: "flutter.versionName=${{ steps.version.outputs.content }}"
      - 
        name: "Update version code in local properties"
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "flutter.versionCode=1"
          replace: "flutter.versionCode=${{ github.run_number }}"
      - 
        name: "Flutter get"
        working-directory: "${{ env.FLUTTER_WEATHER_FOLDER }}"
        run: "flutter pub get"
      - 
        name: "Flutter clean"
        working-directory: "${{ env.FLUTTER_WEATHER_FOLDER }}"
        run: "flutter clean"
      - 
        name: "Flutter test"
        working-directory: "${{ env.FLUTTER_WEATHER_FOLDER }}"
        run: "flutter test"
      - 
        name: "Flutter build app bundle"
        working-directory: "${{ env.FLUTTER_WEATHER_FOLDER }}"
        run: "flutter build appbundle -t lib/main_prod.dart --flavor prod --release --verbose"
      - 
        name: "Compress app bundle"
        run: exec .github/scripts/compress-appbundle.sh
      - 
        name: "Create github artifact"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./apps/mobile_flutter/build/app/outputs/bundle/prodRelease/android-app.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "android-release-${{ steps.version.outputs.content }}"
          commit: ${{ github.sha }}
      - 
        name: "Upload app bundle"
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: "${{ env.FLUTTER_WEATHER_APPBUNDLE_OUTPUT_FOLDER }}${{ env.FLUTTER_WEATHER_APPBUNDLE_OUTPUT_FILE }}"

  release:
    name: "Release Android"
    needs: [ build ]
    runs-on: ubuntu-latest
    env:
      FLUTTER_WEATHER_PLAYSTORE_ACCOUNT_KEY: ${{ secrets.FLUTTER_WEATHER_PLAYSTORE_ACCOUNT_KEY }}
      FLUTTER_WEATHER_APPBUNDLE_OUTPUT_FILE: ${{ 'app-prod-release.aab' }}
      FLUTTER_WEATHER_WHATS_NEW_FOLDER: ${{ './apps/mobile_flutter/dist/whatsnew' }}
    steps:
      - 
        uses: actions/checkout@v2
      - 
        name: "Get app bundle from artifacts"
        uses: actions/download-artifact@v2
        with:
          name: appbundle
      - 
        name: "Release to internal track"
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ env.FLUTTER_WEATHER_PLAYSTORE_ACCOUNT_KEY }}
          packageName: io.flutter_weather.prod
          releaseFiles: "${{ env.FLUTTER_WEATHER_APPBUNDLE_OUTPUT_FILE }}"
          track: internal
          whatsNewDirectory: "${{ env.FLUTTER_WEATHER_WHATS_NEW_FOLDER }}"